---
import type { CollectionEntry } from "astro:content";
import PostCover from "./misc/PostCover.astro";
import PostNavigationButton from "./misc/PostNavigationButton.astro";
import PostTitle from "./misc/PostTitle.astro";
import ReadingInfo from "./misc/ReadingInfo.astro";
import PostMetadata from "./PostMeta.astro";

interface Props {
	class?: string;
	entry: CollectionEntry<"posts">;
	title: string;
	url: string;
	published: Date;
	updated?: Date;
	tags: string[];
	category: string | null;
	image: string;
	description: string;
	draft: boolean;
	style: string;
}
const {
	entry,
	title,
	url,
	published,
	updated,
	tags,
	category,
	image,
	description,
	style,
} = Astro.props;
const className = Astro.props.class;

const hasCover = image !== undefined && image !== null && image !== "";

const coverWidth = "28%";

const { remarkPluginFrontmatter } = await entry.render();
---
<div class:list={["card-base flex flex-col-reverse md:flex-col w-full rounded-[var(--radius-large)] overflow-hidden relative", className]} style={style}>
    <div class:list={["pl-6 md:pl-9 pr-6 md:pr-2 pt-6 md:pt-7 pb-6 relative", 
        !hasCover ? "w-full md:w-[calc(100%-64px)]" : `w-full md:w-[calc(100%-${coverWidth}-12px)]`
    ]}>
        <PostTitle title={title} url={url} />

        <!-- metadata -->
        <PostMetadata published={published} updated={updated} tags={tags} category={category} hideTagsForMobile={true} hideUpdateDate={true} class="mb-4"></PostMetadata>

        <!-- description -->
        <div class:list={["transition text-75 mb-3.5 pr-4", {"line-clamp-2 md:line-clamp-1": !description}]}>
            { description || remarkPluginFrontmatter.excerpt }
        </div>

        <!-- word count and read time  -->
        <ReadingInfo words={remarkPluginFrontmatter.words} minutes={remarkPluginFrontmatter.minutes} />

    </div>

    {hasCover && <PostCover image={image} url={url} title={title} entryId={entry.id} coverWidth={coverWidth} />}

    {!hasCover && <PostNavigationButton url={url} title={title} />}
</div>
<div class="transition border-t-[1px] border-dashed mx-6 border-black/10 dark:border-white/[0.15] last:border-t-0 md:hidden"></div>

<style define:vars={{coverWidth}}>
</style>
