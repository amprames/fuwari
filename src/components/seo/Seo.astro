---
import type { MetaRobots } from "@utils/seo-utils";
import { siteConfig } from "@/config";

interface Props {
	title?: string;
	description?: string;
	canonicalUrl?: string;
	robots?: string | MetaRobots;
	isDraft?: boolean;
	image?: string;
	type?: "website" | "article";
	publishedTime?: string;
	modifiedTime?: string;
	author?: string;
	tags?: string[];
}

const {
	title = siteConfig.title,
	description = siteConfig.description || "A modern blog built with Astro",
	canonicalUrl,
	robots: robotsProp,
	isDraft = false,
	image = siteConfig.banner?.src,
	type = "website",
	publishedTime,
	modifiedTime,
	author,
	tags = [],
} = Astro.props;

const { site } = Astro;
const currentUrl = new URL(Astro.url.pathname, site);
const canonical = canonicalUrl || currentUrl.toString();
const defaultRobots = isDraft ? "noindex, nofollow" : "index, follow";
const robots =
	typeof robotsProp === "string"
		? robotsProp
		: robotsProp
			? generateRobotsContent(robotsProp)
			: defaultRobots;

const fullTitle =
	title === siteConfig.title ? title : `${title} | ${siteConfig.title}`;
const fullDescription = description || siteConfig.description || "";
const fullImage = image ? new URL(image, site).toString() : "";
const siteName = siteConfig.title;
const locale = siteConfig.lang.replace("_", "-");
---

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={fullDescription} />
<meta name="robots" content={robots} />

<!-- Canonical URL -->
<link rel="canonical" href={canonical} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={currentUrl.toString()} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={fullDescription} />
<meta property="og:site_name" content={siteName} />
<meta property="og:locale" content={locale} />
{fullImage && <meta property="og:image" content={fullImage} />}

{/* Twitter Card */}
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={fullTitle} />
<meta name="twitter:description" content={fullDescription} />
{fullImage && <meta name="twitter:image" content={fullImage} />}

{/* Article specific meta tags */}
{type === 'article' && (
  <>
    {publishedTime && <meta property="article:published_time" content={new Date(publishedTime).toISOString()} />}
    {modifiedTime && <meta property="article:modified_time" content={new Date(modifiedTime).toISOString()} />}
    {author && <meta property="article:author" content={author} />}
    {tags.map(tag => (
      <meta property="article:tag" content={tag} />
    ))}
  </>
)}

{/* Additional meta tags */}
<meta name="theme-color" content={siteConfig.themeColor?.light || '#ffffff'} media="(prefers-color-scheme: light)" />
<meta name="theme-color" content={siteConfig.themeColor?.dark || '#000000'} media="(prefers-color-scheme: dark)" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

{/* Favicon */}
{siteConfig.favicon?.map(icon => (
  <link rel={icon.rel} href={icon.href} type={icon.type} sizes={icon.sizes} />
))}

{/* Sitemap */}
<link rel="sitemap" type="application/xml" href="/sitemap.xml" />
