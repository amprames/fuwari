---
import { profileConfig, siteConfig } from "@/config";

interface Props {
	type?: "website" | "blog" | "person" | "organization";
	title?: string;
	description?: string;
	url?: string;
	image?: string;
}

const { type = "website", title, description, url, image } = Astro.props;

let structuredData: Record<string, unknown> = {
	"@context": "https://schema.org",
};

switch (type) {
	case "website":
		structuredData = {
			...structuredData,
			"@type": "WebSite",
			name: title || siteConfig.title,
			description: description || siteConfig.subtitle,
			url: url || Astro.site?.href,
			author: {
				"@type": "Person",
				name: profileConfig.name,
				url: Astro.site?.href,
			},
			publisher: {
				"@type": "Organization",
				name: siteConfig.title,
				url: Astro.site?.href,
				logo: {
					"@type": "ImageObject",
					url: new URL("/favicon/favicon-light-192.png", Astro.site).href,
				},
			},
			potentialAction: {
				"@type": "SearchAction",
				target: {
					"@type": "EntryPoint",
					urlTemplate: `${Astro.site?.href}?q={search_term_string}`,
				},
				"query-input": "required name=search_term_string",
			},
		};
		break;

	case "blog":
		structuredData = {
			...structuredData,
			"@type": "Blog",
			name: title || siteConfig.title,
			description: description || siteConfig.subtitle,
			url: url || Astro.site?.href,
			author: {
				"@type": "Person",
				name: profileConfig.name,
				url: Astro.site?.href,
				sameAs: profileConfig.links?.map((link) => link.url) || [],
			},
			publisher: {
				"@type": "Organization",
				name: siteConfig.title,
				url: Astro.site?.href,
			},
		};
		break;

	case "person":
		structuredData = {
			...structuredData,
			"@type": "Person",
			name: profileConfig.name,
			description: profileConfig.bio,
			url: url || Astro.site?.href,
			sameAs: profileConfig.links?.map((link) => link.url) || [],
			...(image && {
				image: {
					"@type": "ImageObject",
					url: new URL(image, Astro.site).href,
				},
			}),
		};
		break;

	case "organization":
		structuredData = {
			...structuredData,
			"@type": "Organization",
			name: siteConfig.title,
			description: description || siteConfig.subtitle,
			url: url || Astro.site?.href,
			logo: {
				"@type": "ImageObject",
				url: new URL("/favicon/favicon-light-192.png", Astro.site).href,
			},
			founder: {
				"@type": "Person",
				name: profileConfig.name,
			},
		};
		break;
}
---

<script is:inline type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>